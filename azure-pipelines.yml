trigger:
  - master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
      preset: Linux-GCC-Release
      install-depends: |
        sudo apt-get install ninja-build libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config gcc g++
      visual-studio-dir:
      triplet: x64-linux

    windows:
      imageName: 'windows-latest'
      preset: Windows-MSVC-Release
      install-depends: choco install ninja
      visual-studio-dir: C:\Program Files\Microsoft Visual Studio\2022\Enterprise
      triplet: x64-windows

pool:
  vmImage: $(imageName)

variables:
- name: VCPKG_BINARY_SOURCES
  value: "clear;nuget,https://pkgs.dev.azure.com/natecheadle/IgnosiGameEngine/_packaging/VCPKG_CACHE/nuget/v3/index.json,readwrite"

- name: VCPKG_OVERLAY_PORTS 
  value: "$(Build.Repository.LocalPath)/ports"

steps:
- task: BatchScript@1
  inputs:
    filename: '$(visual-studio-dir)\Common7\Tools\VsDevCmd.bat'
    arguments: '-arch=amd64'
    modifyEnvironment: true
  displayName: "Initialize Visual Studio Environment"
  condition: eq( variables['Agent.OS'], 'Windows_NT' )

- script: $(install-depends)
  displayName: "Install Dependencies"

- task: NuGetCommand@2
  displayName: "Configure API Key"
  inputs:
    command: 'custom'
    arguments: setapikey "AzureDevops" -source "https://pkgs.dev.azure.com/natecheadle/IgnosiGameEngine/_packaging/VCPKG_CACHE/nuget/v3/index.json"

- task: NuGetAuthenticate@1
  displayName: "Autheticate to Artifact Feed"

- script: $(VCPKG_INSTALLATION_ROOT)/vcpkg install --triplet=$(triplet)
  displayName: Build All Custom VCPKG
